server:
  port: 8801

spring:
  application:
    name: micro-server3-gateway-zuul

#因为Zuul也需要配置高可用，所以必然用到服务发现组件Eureka。
eureka:
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://admin:admin123@localhost:8761/eureka
    healthcheck:
      enable: true

zuul:
  #在不加此配置时，如果要访问user微服务或者movie微服务，要使用user微服务和movie微服务的spring.application.name：
  #http://localhost:8801/micro-server2-hystrix-user/user/getuserlistgood?id=22；
  #加了此配置项后，访问user微服务或者movie微服务，则将其spring.application.name替换成配置的值（user和movie）即可：
  #http://localhost:8801/user/user/getuserlistgood?id=22。此时两种url均可访问微服务。
  #/user/*，只能匹配一层，即/user/x，/user/x/x 不能被匹配
  #/user/**，匹配碎一层，即/user/x/x/......
  #routes的使用方式有三种方式（不推荐第三种）：
  #一，
#  routes:
#    micro-server2-hystrix-user: /user/**
#    micro-server2-hystrix-movie-feign: /movie/**

  #二，
  routes:
    user:
      path: /usr/**
      serviceId: micro-server2-hystrix-user
    movie:
      path: /mvi/**
      serviceId: micro-server2-hystrix-movie-feign
    upload:
      path: /ul/**
      serviceId: micro-upload

  #三，
  #此种方式的请求，不会被HystrixComond监控，同时不会被ribbon进行负载均衡。
#  routes:
#      user:
#        path: /user/**
#        url: http://localhost:7902/

  #配置此项后，访问user微服务或者movie微服务，通过spring.application.name的方式将无法访问，
  #只能使用routes中配置的信息进行访问。
  ignored-services: "*"
  #strip-prefix默认为true，prefix相当于zuul请求路径的前缀，
  #请求路径为：http://localhost:8801/api/user/user/getuserlistgood?id=22；
  #strip-prefix设置false，prefix相当于微服务请求路径的前缀，可用于代替微服务的content path，
  #请求路径变为：http://localhost:8801/user/api/user/getuserlistgood?id=22。
  #这种设置是全局的，还有针对某个微服务的，详见官方文档。
#  prefix: /api
#  strip-prefix: false

logging:
  level:
    com.netflix: DEBUG